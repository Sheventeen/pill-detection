import { a as BaseStreamInfo, c as TextStreamInfo, b as ByteStreamInfo } from '../../src/stream_reader-DRyR29vo.ts';
import '../../src/proto/room_pb.ts';
import '@bufbuild/protobuf';
import '../../src/proto/participant_pb.ts';
import '../../src/proto/handle_pb.ts';
import '../../src/proto/track_pb.ts';
import '../../src/proto/stats_pb.ts';
import '../../src/proto/e2ee_pb.ts';
import '../../src/proto/video_frame_pb.ts';
import '../../src/proto/data_stream_pb.ts';

declare class BaseStreamWriter<T, InfoType extends BaseStreamInfo> {
    protected writableStream: WritableStream<T>;
    protected defaultWriter: WritableStreamDefaultWriter<T>;
    protected onClose?: () => void;
    readonly info: InfoType;
    constructor(writableStream: WritableStream<T>, info: InfoType, onClose?: () => void);
    write(chunk: T): Promise<void>;
    close(): Promise<void>;
}
declare class TextStreamWriter extends BaseStreamWriter<string, TextStreamInfo> {
}
declare class ByteStreamWriter extends BaseStreamWriter<Uint8Array, ByteStreamInfo> {
}

export { ByteStreamWriter, TextStreamWriter };
