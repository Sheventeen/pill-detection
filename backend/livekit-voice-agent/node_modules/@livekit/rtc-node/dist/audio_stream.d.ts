import { AudioFrame } from '../src/audio_frame.ts';
import { Track } from '../src/track.ts';
import '../src/proto/audio_frame_pb.ts';
import '@bufbuild/protobuf';
import '../src/proto/track_pb.ts';
import '../src/proto/stats_pb.ts';
import '../src/proto/e2ee_pb.ts';
import '../src/proto/handle_pb.ts';
import '../src/audio_source.ts';
import '../src/napi/native.js';
import '../src/ffi_client.ts';
import '@livekit/typed-emitter';
import '../src/proto/ffi_pb.ts';
import '../src/proto/room_pb.ts';
import '../src/proto/participant_pb.ts';
import '../src/proto/video_frame_pb.ts';
import '../src/proto/data_stream_pb.ts';
import '../src/proto/rpc_pb.ts';
import '../src/proto/track_publication_pb.ts';
import '../src/video_source.ts';
import '../src/video_frame.ts';

interface AudioStreamOptions {
    noiseCancellation?: NoiseCancellationOptions;
    sampleRate?: number;
    numChannels?: number;
    frameSizeMs?: number;
}
interface NoiseCancellationOptions {
    moduleId: string;
    options: Record<string, any>;
}
declare class AudioStream extends ReadableStream<AudioFrame> {
    constructor(track: Track);
    constructor(track: Track, sampleRate: number);
    constructor(track: Track, sampleRate: number, numChannels: number);
    constructor(track: Track, options: AudioStreamOptions);
}

export { AudioStream, type AudioStreamOptions, type NoiseCancellationOptions };
