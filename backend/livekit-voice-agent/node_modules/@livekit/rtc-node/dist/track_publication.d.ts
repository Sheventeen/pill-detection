import { FfiHandle } from '../src/napi/native.js';
import { EncryptionType } from '../src/proto/e2ee_pb.ts';
import { TrackPublicationInfo, OwnedTrackPublication, TrackKind, TrackSource } from '../src/proto/track_pb.ts';
import { Track } from '../src/track.ts';
import '@bufbuild/protobuf';
import '../src/proto/stats_pb.ts';
import '../src/proto/handle_pb.ts';
import '../src/audio_source.ts';
import '../src/audio_frame.ts';
import '../src/proto/audio_frame_pb.ts';
import '../src/ffi_client.ts';
import '@livekit/typed-emitter';
import '../src/proto/ffi_pb.ts';
import '../src/proto/room_pb.ts';
import '../src/proto/participant_pb.ts';
import '../src/proto/video_frame_pb.ts';
import '../src/proto/data_stream_pb.ts';
import '../src/proto/rpc_pb.ts';
import '../src/proto/track_publication_pb.ts';
import '../src/video_source.ts';
import '../src/video_frame.ts';

declare abstract class TrackPublication {
    /** @internal */
    ffiHandle: FfiHandle;
    /** @internal */
    info?: TrackPublicationInfo;
    track?: Track;
    constructor(ownedInfo: OwnedTrackPublication);
    get sid(): string | undefined;
    get name(): string | undefined;
    get kind(): TrackKind | undefined;
    get source(): TrackSource | undefined;
    get simulcasted(): boolean | undefined;
    get width(): number | undefined;
    get height(): number | undefined;
    get mimeType(): string | undefined;
    get muted(): boolean | undefined;
    get encryptionType(): EncryptionType | undefined;
}
declare class LocalTrackPublication extends TrackPublication {
    private firstSubscription;
    private firstSubscriptionResolver;
    constructor(ownedInfo: OwnedTrackPublication);
    waitForSubscription(): Promise<void>;
    /** @internal */
    resolveFirstSubscription(): void;
}
declare class RemoteTrackPublication extends TrackPublication {
    subscribed: boolean;
    constructor(ownedInfo: OwnedTrackPublication);
    setSubscribed(subscribed: boolean): void;
}

export { LocalTrackPublication, RemoteTrackPublication, TrackPublication };
