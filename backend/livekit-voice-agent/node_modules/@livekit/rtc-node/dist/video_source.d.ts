import '../src/ffi_client.ts';
import { VideoSourceInfo, VideoRotation } from '../src/proto/video_frame_pb.ts';
import { VideoFrame } from '../src/video_frame.ts';
import { FfiHandle } from '../src/napi/native.js';
import '@bufbuild/protobuf';
import '@livekit/typed-emitter';
import '../src/proto/ffi_pb.ts';
import '../src/proto/room_pb.ts';
import '../src/proto/participant_pb.ts';
import '../src/proto/handle_pb.ts';
import '../src/proto/track_pb.ts';
import '../src/proto/stats_pb.ts';
import '../src/proto/e2ee_pb.ts';
import '../src/proto/data_stream_pb.ts';
import '../src/proto/audio_frame_pb.ts';
import '../src/proto/rpc_pb.ts';
import '../src/proto/track_publication_pb.ts';

declare class VideoSource {
    /** @internal */
    info?: VideoSourceInfo;
    /** @internal */
    ffiHandle: FfiHandle;
    /** @internal */
    closed: boolean;
    width: number;
    height: number;
    constructor(width: number, height: number);
    captureFrame(frame: VideoFrame, timestampUs?: bigint, rotation?: VideoRotation): void;
    close(): Promise<void>;
}

export { VideoSource };
